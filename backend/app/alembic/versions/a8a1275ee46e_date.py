"""date

Revision ID: a8a1275ee46e
Revises: cf2789d357f1
Create Date: 2024-06-05 11:56:51.024941

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'a8a1275ee46e'
down_revision: Union[str, None] = 'cf2789d357f1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('customer',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('first_name', sa.String(length=30), nullable=True),
    # sa.Column('last_name', sa.String(length=30), nullable=True),
    # sa.Column('full_name', sa.String(length=45), nullable=True),
    # sa.Column('mobile_number', sa.String(length=12), nullable=True),
    # sa.Column('email_id', sa.String(length=50), nullable=True),
    # sa.Column('password', sa.String(length=100), nullable=True),
    # sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
    # sa.Column('created_at', sa.DateTime(), nullable=True),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('first_name'),
    # sa.UniqueConstraint('full_name'),
    # sa.UniqueConstraint('mobile_number')
    # )
    # op.create_table('producttype',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('name', sa.String(length=45), nullable=True),
    # sa.Column('date', sa.Date(), nullable=True),
    # sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('api_tokens',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('user_id', sa.Integer(), nullable=True),
    # sa.Column('token', sa.String(length=100), nullable=True),
    # sa.Column('date', sa.DateTime(), nullable=True),
    # sa.Column('validity', mysql.TINYINT(display_width=1), nullable=True, comment='0-Expired, 1- Lifetime'),
    # sa.Column('status', mysql.TINYINT(display_width=1), nullable=True, comment='1-active, -1 inactive, 0- deleted'),
    # sa.ForeignKeyConstraint(['user_id'], ['customer.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('product',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('name', sa.String(length=45), nullable=True),
    # sa.Column('pro_type', sa.Integer(), nullable=True),
    # sa.Column('rate', sa.Float(), nullable=True),
    # sa.Column('date', sa.Date(), nullable=True),
    # sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
    # sa.ForeignKeyConstraint(['pro_type'], ['producttype.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('cart',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('cus_id', sa.Integer(), nullable=True),
    # sa.Column('pro_id', sa.Integer(), nullable=True),
    # sa.Column('quantity', sa.Integer(), nullable=True),
    # sa.Column('rate', sa.Float(), nullable=True),
    # sa.Column('total', sa.Float(), nullable=True),
    # sa.Column('date', sa.DateTime(), nullable=True),
    # sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
    # sa.ForeignKeyConstraint(['cus_id'], ['customer.id'], ),
    # sa.ForeignKeyConstraint(['pro_id'], ['product.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('sales',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('cus_id', sa.Integer(), nullable=True),
    # sa.Column('pro_id', sa.Integer(), nullable=True),
    # sa.Column('qty', sa.Integer(), nullable=True),
    # sa.Column('rate', sa.Float(), nullable=True),
    # sa.Column('total_amount', sa.Float(), nullable=True),
    # sa.Column('date', sa.DateTime(), nullable=True),
    # sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
    # sa.ForeignKeyConstraint(['cus_id'], ['customer.id'], ),
    # sa.ForeignKeyConstraint(['pro_id'], ['product.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('stock',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('pro_id', sa.Integer(), nullable=True),
    # sa.Column('qty', sa.Integer(), nullable=True),
    # sa.Column('initial_qty', sa.Integer(), nullable=True),
    # sa.Column('date', sa.Date(), nullable=True),
    # sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
    # sa.ForeignKeyConstraint(['pro_id'], ['product.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('wishlist',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('cus_id', sa.Integer(), nullable=True),
    # sa.Column('pro_id', sa.Integer(), nullable=True),
    # sa.Column('date', sa.DateTime(), nullable=True),
    # sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
    # sa.ForeignKeyConstraint(['cus_id'], ['customer.id'], ),
    # sa.ForeignKeyConstraint(['pro_id'], ['product.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('wishlist')
    # op.drop_table('stock')
    # op.drop_table('sales')
    # op.drop_table('cart')
    # op.drop_table('product')
    # op.drop_table('api_tokens')
    # op.drop_table('producttype')
    # op.drop_table('customer')
    # ### end Alembic commands ###
